<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="commandSet.xsd" type="instance">
	<commandSet type="serial">
		<state>incomplete</state>
		<name>start pipeline:</name>
		<commandSet type="serial">
			<state>incomplete</state>
			<commandSet type="serial">
				<state>incomplete</state>
				<name>bwa_aln.recipient</name>
			</commandSet>
			<commandSet type="serial">
				<state>incomplete</state>
				<name>bwa_aln.donor</name>
			</commandSet>
			<commandSet type="serial">
				<state>incomplete</state>
				<name>lgtseek_classify_reads.default</name>
			</commandSet>
		</commandSet>
		<commandSet type="parallel">
			<state>incomplete</state>
			<!-- LGT READS -->
			<commandSet type="serial">
				<state>incomplete</state>
				<commandSet type="parallel">
					<state>incomplete</state>
					<!-- INFECTED RECIPIENT -->
					<commandSet type="serial">
						<state>incomplete</state>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>filter_dups_lc_seqs.lgt_recipient</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>filter_dups_lc_seqs.infected</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>concatenate_files.lgt_infected</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>samtools_merge.lgt_infected</name>
						</commandSet>
						<!-- BLAST & LCA -->
						<commandSet type="serial">
							<state>incomplete</state>
							<commandSet type="serial">
								<state>incomplete</state>
								<name>sam2fasta.fasta_r</name>
							</commandSet>
							<commandSet type="serial">
								<state>incomplete</state>
								<name>split_multifasta.fasta_r</name>
							</commandSet>
							<!-- BAC BLAST -->
							<commandSet type="serial">
								<state>incomplete</state>
								<name>blastdb_alias.bac</name>
							</commandSet>
							<commandSet type="serial">
								<state>incomplete</state>
								<name>blastn_plus.nt_r</name>
							</commandSet>
							<commandSet type="serial">
								<state>incomplete</state>
								<name>concatenate_files.blast_r</name>
							</commandSet>
							<commandSet type="serial">
								<state>incomplete</state>
								<name>blast_lgt_finder.lgt_r</name>
							</commandSet>
							<commandSet type="serial">
								<state>incomplete</state>
								<name>blast2lca.lgt_r</name>
							</commandSet>
						</commandSet>
					</commandSet>
					<!-- DONOR -->
					<commandSet type="serial">
						<state>incomplete</state>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>filter_dups_lc_seqs.lgt_donor</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>get_aligned_reads_list.lgt_donor</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>sam2fasta.fasta_d</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>split_multifasta.fasta_d</name>
						</commandSet>
						<!-- EUK BLAST -->
						<commandSet type="serial">
							<state>incomplete</state>
							<name>blastdb_alias.euk</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>blastn_plus.nt_d</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>concatenate_files.blast_d</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>blast_lgt_finder.lgt_d</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>blast2lca.lgt_d</name>
						</commandSet>
					</commandSet>
				</commandSet>
				<!-- FINAL LGT PROCESSING -->
				<commandSet type="serial">
					<state>incomplete</state>
					<name>determine_final_lgt.final</name>
				</commandSet>
				<commandSet type="serial">
					<state>incomplete</state>
					<name>lgt_create_validated_bam.lgt_d</name>
				</commandSet>
				<commandSet type="serial">
					<state>incomplete</state>
					<name>lgt_create_validated_bam.lgt_r/name>
				</commandSet>
				<commandSet type="parallel">
					<state>incomplete</state>
					<commandSet type="serial">
						<state>incomplete</state>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>bwa_aln.validation_d</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>lgt_mpileup.lgt_donor</name>
						</commandSet>
					</commandSet>
					<commandSet type="serial">
						<state>incomplete</state>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>bwa_aln.validation_r</name>
						</commandSet>
						<commandSet type="serial">
							<state>incomplete</state>
							<name>lgt_mpileup.lgt_recipient</name>
						</commandSet>
					</commandSet>
				</commandSet>
			</commandSet>
			<!-- ALL DONOR -->
			<commandSet type="serial">
				<state>incomplete</state>
				<commandSet type="serial">
					<state>incomplete</state>
					<name>filter_dups_lc_seqs.all_donor</name>
				</commandSet>
				<commandSet type="serial">
					<state>incomplete</state>
					<name>lgt_mpileup.all_donor</name>
				</commandSet>
			</commandSet>
			<!-- ALL RECIPIENT -->
			<commandSet type="serial">
				<state>incomplete</state>
				<commandSet type="serial">
					<state>incomplete</state>
					<name>filter_dups_lc_seqs.all_recipient</name>
				</commandSet>
				<commandSet type="serial">
					<state>incomplete</state>
					<name>lgt_mpileup.all_recipient</name>
				</commandSet>
			</commandSet>
		</commandSet>
	</commandSet>
</commandSetRoot>
