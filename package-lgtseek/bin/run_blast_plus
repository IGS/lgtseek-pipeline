#!/bin/bash
if [ -z "$SCHEMA_DOCS_DIR" ]
then
    SCHEMA_DOCS_DIR=
export SCHEMA_DOCS_DIR
fi
if [ -z "$WORKFLOW_WRAPPERS_DIR" ]
then
    WORKFLOW_WRAPPERS_DIR=/opt/ergatis/bin
export WORKFLOW_WRAPPERS_DIR
fi
if [ -z "$WORKFLOW_DOCS_DIR" ]
then
    WORKFLOW_DOCS_DIR=
export WORKFLOW_DOCS_DIR
fi

umask 0000
unset LD_LIBRARY_PATH

LANG=C
export LANG
LC_ALL=C
export LC_ALL

# Actual script code starts here

### run_blast_plus.sh ###
# Author: Shaun Adkins (sadkins@som.umaryland.edu)
# This script is to configure and run BLAST+ on a given input file.
# The script will
#   a) Run BLAST, outputting to ASN format
#   b) Format the output using 'blast_formatter' so that both pairwise and m8 formats are present

check_for_success () {
    if [ $2 -ne 0 ]; then 
        echo "$1 failed with exit code $2"
        exit 1
    fi
}

while [[ $# -ge 1 ]]
do
i="$1"
# splitting on "=" since Ergatis constructs args with --arg=val syntax
arg=$(echo $i | cut -f1 -d "=")
val=$(echo $i | cut -f2 -d "=")

case $arg in
    --blast_plus_bin)
    blast_plus_bin="$val"
    ;;
    --blast_type)
    blast_type="$val"
    ;;
    --db)
    db="$val"
    ;;
    --evalue)
    evalue="$val"
    ;;
    --max_target_seqs)
    max_target_seqs="$val"
    ;;
    --out)
    out="$val"
    ;;
    --other_opts)
    other_opts="$val"
    ;;
    --query)
    query="$val"
    ;;
esac
shift
done

if [ ! -d "$blast_plus_bin" ]; then
	echo "Cannot find BLAST+ directory at $blast_plus_bin: Exiting" >&2
	exit 1
fi

# Setup and run the BLAST+ command
blast_plus_cmd="${blast_plus_bin}/$blast_type"
blast_plus_cmd="$blast_plus_cmd -db $db -evalue $evalue -query $query $other_opts"

# Output ASN format since it's easy to convert to other formats
blast_plus_cmd="$blast_plus_cmd -outfmt 11 -out $out.asn -max_target_seqs $max_target_seqs"

echo "$blast_plus_cmd"
$blast_plus_cmd

check_for_success "$blast_plus_cmd" $?

# Time to run blast_formatter
blast_fmtr_cmd="${blast_plus_bin}/blast_formatter"

blast_pairwise_cmd="$blast_fmtr_cmd -archive $out.asn -outfmt 0 -out $out.raw"
blast_m8_cmd="$blast_fmtr_cmd -archive $out.asn -outfmt 6 -out $out.m8"
echo "$blast_pairwise_cmd"
$blast_pairwise_cmd
echo "$blast_m8_cmd"
$blast_m8_cmd
check_for_success "$blast_m8_cmd" $?
echo "Now removing ASN file"
`rm $out.asn`

exit 0

